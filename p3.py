# -*- coding: utf-8 -*-
"""p3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ElJeOkzNUQhyxIRiFqsUKHkOQ4JS1cqA
"""

# nama file p3.py 
# Isikan email anda dan copy semua cell code yang dengan komentar #Graded

# untuk revisi dan resubmisi sebelum deadline
# silakan di resubmit dengan nilai variable priority yang lebih besar dari
# nilai priority submisi sebelumnya
# JIKA TIDAK ADA VARIABLE priority DIANGGAP priority=0
priority = 1

#netacad email cth: 'abcd@gmail.com'
email='raspianiyani@gmail.com'
 
# copy-paste semua #Graded cells YANG SUDAH ANDA KERJAKAN di bawah ini

#No.1
# Graded
def caesar_encript(txt,shift):
  #pass
  # Mulai Kode anda di sini
  return ''.join([(lambda cha, upper: cha.upper() if upper else cha)(("abcdefghijklmnopqrstuvwxyz"*2)[ord(char.lower()) - ord('a') + shift % 26], char.isupper()) if char.isalpha() else char for char in txt])

# Fungsi Decript caesar
def caesar_decript(chiper,shift):
  return caesar_encript(chiper,-shift)



#No.2
# Graded
 
# Fungsi mengacak urutan
def shuffle_order(txt,order):
  return ''.join([txt[i] for i in order])
 
# Fungsi untuk mengurutkan kembali sesuai order
def deshuffle_order(sftxt,order):
  pass
  # Mulai Kode anda di sini
  return ''.join([i[1] for i in sorted(dict(zip(order, sftxt)).items())])



#No.3
# Graded
 
import math
 
 
# convert txt ke dalam bentuk list teks yang lebih pendek
# dan terenkrispi dengan urutan acak setiap batchnya
def send_batch(txt,batch_order,shift=3):
  pass
  # Mulai Kode anda di sini
  teks = caesar_encript(txt,shift=shift)
  teks = [teks[i:i+len(batch_order)] for i in range(0, len(teks), len(batch_order))]
  for i in range(len(teks)):
    if len(teks[i]) % len(batch_order) != 0:
      teks[i] += '_' * len(batch_order)

  shuffle = [shuffle_order(teks[i], batch_order) for i in range(len(teks))]
  return shuffle
 
# batch_cpr: list keluaran send_batch
# fungsi ini akan mengembalikan lagi ke txt semula
def receive_batch(batch_cpr,batch_order,shift=3):
  batch_txt = [caesar_decript(deshuffle_order(i,batch_order),shift) for i in batch_cpr]
  return ''.join(batch_txt).strip('_')